version: '3'
services:

  nginx:
    build:
      context: ./proxy
    restart: always
    depends_on:
      - django
    ports:
      - "80:80"
    networks:
      - network
    volumes:
      - static-data:/vol/static

  django:
    networks:
      - network
    build:
      context: .
    restart: always
    volumes:
      - static-data:/app/staticfiles
    depends_on:
      - postgresdb
      - elasticsearch
    command: >
      sh -c "python manage.py collectstatic --noinput --settings=config.settings.deploy &&
             python manage.py migrate --settings=config.settings.deploy &&
             python manage.py search_index --rebuild -f --settings=config.settings.deploy &&
             gunicorn config.wsgi --env DJANGO_SETTINGS_MODULE=config.settings.deploy --bind 0.0.0.0:8000"

  postgresdb:
    image: postgres:13.11
    networks:
      - network
    volumes:
      - postgres-database:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=django
      - POSTGRES_USER=django
      - POSTGRES_PASSWORD=django

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.3.1
    networks:
      - network
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    depends_on:
      - postgresdb

  redis:
    image: redis:6.2
    networks:
      - network
    volumes:
      - redis-data:/data

  celery:
    build:
      context: .
    networks:
      - network
    volumes:
      - .:/app
    depends_on:
      - redis
      - postgresdb
    environment:
      - DATABASE_HOST=postgresdb
      - CELERY_BROKER_URL=redis://redis:6379/0
      - DJANGO_ENV=deploy
    command: celery -A config worker --loglevel=info

  celery-beat:
    build:
      context: .
    networks:
      - network
    volumes:
      - .:/app
      - ./celerybeat-schedule:/var/lib/celery/beat-schedule
    depends_on:
      - redis
      - postgresdb
    environment:
      - DATABASE_HOST=postgresdb
      - CELERY_BROKER_URL=redis://redis:6379/0
      - DJANGO_ENV=deploy
    command: >
      sh -c "celery -A config beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler"


  flower:
    build:
      context: .
    ports:
      - 5555:5555
    networks:
      - network
    volumes:
      - .:/app
      - flower-data:/data
    depends_on:
      - redis
      - postgresdb
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - DJANGO_ENV=deploy
    command: celery -A config flower --db=/data/flower.db --persistent=True

networks:
  network:

volumes:
  static-data:
  elasticsearch-data:
  postgres-database:
  redis-data:
  flower-data:
